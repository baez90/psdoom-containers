// Code generated by protoc-gen-go. DO NOT EDIT.
// source: k8s-daemon.proto

package k8sApi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_d53ee3c9843d4cb0, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Pod struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pod) Reset()         { *m = Pod{} }
func (m *Pod) String() string { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()    {}
func (*Pod) Descriptor() ([]byte, []int) {
	return fileDescriptor_d53ee3c9843d4cb0, []int{1}
}

func (m *Pod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pod.Unmarshal(m, b)
}
func (m *Pod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pod.Marshal(b, m, deterministic)
}
func (m *Pod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pod.Merge(m, src)
}
func (m *Pod) XXX_Size() int {
	return xxx_messageInfo_Pod.Size(m)
}
func (m *Pod) XXX_DiscardUnknown() {
	xxx_messageInfo_Pod.DiscardUnknown(m)
}

var xxx_messageInfo_Pod proto.InternalMessageInfo

func (m *Pod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pod) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type Pods struct {
	Pods                 []*Pod   `protobuf:"bytes,4,rep,name=pods,proto3" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pods) Reset()         { *m = Pods{} }
func (m *Pods) String() string { return proto.CompactTextString(m) }
func (*Pods) ProtoMessage()    {}
func (*Pods) Descriptor() ([]byte, []int) {
	return fileDescriptor_d53ee3c9843d4cb0, []int{2}
}

func (m *Pods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pods.Unmarshal(m, b)
}
func (m *Pods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pods.Marshal(b, m, deterministic)
}
func (m *Pods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pods.Merge(m, src)
}
func (m *Pods) XXX_Size() int {
	return xxx_messageInfo_Pods.Size(m)
}
func (m *Pods) XXX_DiscardUnknown() {
	xxx_messageInfo_Pods.DiscardUnknown(m)
}

var xxx_messageInfo_Pods proto.InternalMessageInfo

func (m *Pods) GetPods() []*Pod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type PodDeletion struct {
	PodId                int32    `protobuf:"varint,5,opt,name=podId,proto3" json:"podId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodDeletion) Reset()         { *m = PodDeletion{} }
func (m *PodDeletion) String() string { return proto.CompactTextString(m) }
func (*PodDeletion) ProtoMessage()    {}
func (*PodDeletion) Descriptor() ([]byte, []int) {
	return fileDescriptor_d53ee3c9843d4cb0, []int{3}
}

func (m *PodDeletion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodDeletion.Unmarshal(m, b)
}
func (m *PodDeletion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodDeletion.Marshal(b, m, deterministic)
}
func (m *PodDeletion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodDeletion.Merge(m, src)
}
func (m *PodDeletion) XXX_Size() int {
	return xxx_messageInfo_PodDeletion.Size(m)
}
func (m *PodDeletion) XXX_DiscardUnknown() {
	xxx_messageInfo_PodDeletion.DiscardUnknown(m)
}

var xxx_messageInfo_PodDeletion proto.InternalMessageInfo

func (m *PodDeletion) GetPodId() int32 {
	if m != nil {
		return m.PodId
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "k8sApi.Empty")
	proto.RegisterType((*Pod)(nil), "k8sApi.Pod")
	proto.RegisterType((*Pods)(nil), "k8sApi.Pods")
	proto.RegisterType((*PodDeletion)(nil), "k8sApi.PodDeletion")
}

func init() { proto.RegisterFile("k8s-daemon.proto", fileDescriptor_d53ee3c9843d4cb0) }

var fileDescriptor_d53ee3c9843d4cb0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x5e, 0xb7, 0xfe, 0xa0, 0xaf, 0x2a, 0x12, 0x3d, 0x94, 0x21, 0x58, 0xe2, 0xc1, 0x82, 0x2c,
	0xca, 0x3c, 0x58, 0x8f, 0x8e, 0xc9, 0x90, 0x5e, 0x4a, 0xff, 0x83, 0xb4, 0x89, 0x1a, 0xd6, 0xf6,
	0x85, 0x25, 0x1e, 0xf4, 0xaf, 0x97, 0x66, 0x0c, 0xe7, 0x29, 0x79, 0xdf, 0xc7, 0xf7, 0xe3, 0x3d,
	0x38, 0xdf, 0x16, 0x66, 0x21, 0xb8, 0xec, 0x71, 0x60, 0x7a, 0x87, 0x16, 0x49, 0xb8, 0x2d, 0xcc,
	0x8b, 0x56, 0x34, 0x82, 0xe0, 0xb5, 0xd7, 0xf6, 0x9b, 0x6e, 0x60, 0x56, 0xa1, 0x20, 0x67, 0x30,
	0x55, 0x22, 0xf5, 0x32, 0x2f, 0x8f, 0xeb, 0xa9, 0x12, 0x84, 0x80, 0x3f, 0xf0, 0x5e, 0xa6, 0x53,
	0x87, 0xb8, 0x3f, 0xb9, 0x82, 0x78, 0x7c, 0x8d, 0xe6, 0xad, 0x4c, 0x67, 0x8e, 0xf8, 0x03, 0xe8,
	0x2d, 0xf8, 0x15, 0x0a, 0x43, 0xae, 0xc1, 0xd7, 0x28, 0x4c, 0xea, 0x67, 0xb3, 0x3c, 0x59, 0x26,
	0x6c, 0x1f, 0xc8, 0x2a, 0x14, 0xb5, 0x23, 0xe8, 0x0d, 0x24, 0x15, 0x8a, 0xb5, 0xec, 0xa4, 0x55,
	0x38, 0x90, 0x4b, 0x08, 0x34, 0x8a, 0x37, 0x91, 0x06, 0x99, 0x97, 0x07, 0xf5, 0x7e, 0x58, 0xbe,
	0x43, 0x5c, 0x16, 0x66, 0xed, 0xaa, 0x93, 0x1c, 0xa2, 0x8d, 0xb4, 0xce, 0xfd, 0xf4, 0xe0, 0xe7,
	0xda, 0xcf, 0x4f, 0x8e, 0xec, 0x0d, 0x9d, 0x90, 0x7b, 0x88, 0x4a, 0xd5, 0x75, 0xe3, 0x46, 0x17,
	0x47, 0xd4, 0x21, 0x6c, 0xfe, 0x5f, 0x4e, 0x27, 0xab, 0x27, 0xb8, 0x6b, 0xb1, 0x67, 0x1f, 0xca,
	0x7e, 0x7e, 0x35, 0xac, 0xe1, 0xf2, 0xe7, 0xf9, 0x81, 0x69, 0x23, 0x10, 0xfb, 0x45, 0x8b, 0x83,
	0xe5, 0x6a, 0x90, 0x3b, 0x33, 0xaa, 0x18, 0xd7, 0x6a, 0x15, 0x96, 0x4e, 0x5e, 0x79, 0x4d, 0xe8,
	0xee, 0xf9, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x0f, 0x6f, 0x3a, 0x63, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// K8SDaemonClient is the client API for K8SDaemon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type K8SDaemonClient interface {
	GetPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error)
	KillPod(ctx context.Context, in *PodDeletion, opts ...grpc.CallOption) (*Empty, error)
}

type k8SDaemonClient struct {
	cc *grpc.ClientConn
}

func NewK8SDaemonClient(cc *grpc.ClientConn) K8SDaemonClient {
	return &k8SDaemonClient{cc}
}

func (c *k8SDaemonClient) GetPods(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pods, error) {
	out := new(Pods)
	err := c.cc.Invoke(ctx, "/k8sApi.K8sDaemon/GetPods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *k8SDaemonClient) KillPod(ctx context.Context, in *PodDeletion, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/k8sApi.K8sDaemon/KillPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// K8SDaemonServer is the server API for K8SDaemon service.
type K8SDaemonServer interface {
	GetPods(context.Context, *Empty) (*Pods, error)
	KillPod(context.Context, *PodDeletion) (*Empty, error)
}

// UnimplementedK8SDaemonServer can be embedded to have forward compatible implementations.
type UnimplementedK8SDaemonServer struct {
}

func (*UnimplementedK8SDaemonServer) GetPods(ctx context.Context, req *Empty) (*Pods, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPods not implemented")
}
func (*UnimplementedK8SDaemonServer) KillPod(ctx context.Context, req *PodDeletion) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KillPod not implemented")
}

func RegisterK8SDaemonServer(s *grpc.Server, srv K8SDaemonServer) {
	s.RegisterService(&_K8SDaemon_serviceDesc, srv)
}

func _K8SDaemon_GetPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(K8SDaemonServer).GetPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/k8sApi.K8sDaemon/GetPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(K8SDaemonServer).GetPods(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _K8SDaemon_KillPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodDeletion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(K8SDaemonServer).KillPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/k8sApi.K8sDaemon/KillPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(K8SDaemonServer).KillPod(ctx, req.(*PodDeletion))
	}
	return interceptor(ctx, in, info, handler)
}

var _K8SDaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "k8sApi.K8sDaemon",
	HandlerType: (*K8SDaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPods",
			Handler:    _K8SDaemon_GetPods_Handler,
		},
		{
			MethodName: "KillPod",
			Handler:    _K8SDaemon_KillPod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "k8s-daemon.proto",
}
